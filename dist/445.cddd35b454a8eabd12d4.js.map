{"version":3,"file":"445.cddd35b454a8eabd12d4.js","mappings":"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","sources":["webpack://traya-app/./src/components/DashboardLayout/DashboardLayout.tsx","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nconst KeyMetricsContent: React.FC = () => (\r\n  <ul>\r\n    <li><strong>Visitors Today:</strong> 1,324</li>\r\n    <li><strong>New Signups:</strong> 57</li>\r\n    <li><strong>Bounce Rate:</strong> 43%</li>\r\n    <li><strong>Revenue:</strong> $2,193.45</li>\r\n  </ul>\r\n);\r\n\r\nconst SalesChartContent: React.FC = () => (\r\n  <div>\r\n    üìä Placeholder for a chart library like Recharts or Chart.js\r\n    <p>Bar chart showing monthly sales revenue across 12 months.</p>\r\n  </div>\r\n);\r\n\r\nconst RecentActivityContent: React.FC = () => (\r\n  <ul>\r\n    <li>User John Doe signed up</li>\r\n    <li>Order #1234 completed</li>\r\n    <li>Server restarted at 3:45 PM</li>\r\n    <li>Admin updated pricing rules</li>\r\n  </ul>\r\n);\r\n\r\nconst ToDoListContent: React.FC = () => (\r\n  <ul>\r\n    <li>‚úÖ Deploy new marketing site</li>\r\n    <li>‚è≥ Review Q2 budget proposal</li>\r\n    <li>üìå Fix dashboard scroll bug</li>\r\n    <li>üì© Email user feedback survey</li>\r\n  </ul>\r\n);\r\n\r\ninterface Panel {\r\n  id: string;\r\n  title: string;\r\n  contentType: string;\r\n  colStart: number;\r\n  colEnd: number;\r\n  rowStart: number;\r\n  rowEnd: number;\r\n  collapsed: boolean;\r\n}\r\n\r\nconst STORAGE_KEY = 'dashboard-layout';\r\n\r\nconst initialPanels: Panel[] = [\r\n  {\r\n    id: 'stats',\r\n    title: 'Key Metrics',\r\n    contentType: 'KeyMetrics',\r\n    colStart: 1,\r\n    colEnd: 2,\r\n    rowStart: 1,\r\n    rowEnd: 2,\r\n    collapsed: false,\r\n  },\r\n  {\r\n    id: 'chart',\r\n    title: 'Sales Chart (Monthly)',\r\n    contentType: 'SalesChart',\r\n    colStart: 3,\r\n    colEnd: 4,\r\n    rowStart: 1,\r\n    rowEnd: 3,\r\n    collapsed: false,\r\n  },\r\n  {\r\n    id: 'activity',\r\n    title: 'Recent Activity',\r\n    contentType: 'RecentActivity',\r\n    colStart: 4,\r\n    colEnd: 5,\r\n    rowStart: 1,\r\n    rowEnd: 3,\r\n    collapsed: false,\r\n  },\r\n  {\r\n    id: 'tasks',\r\n    title: 'To-Do List',\r\n    contentType: 'ToDoList',\r\n    colStart: 5,\r\n    colEnd: 6,\r\n    rowStart: 1,\r\n    rowEnd: 3,\r\n    collapsed: false,\r\n  },\r\n];\r\n\r\n\r\nconst PanelContentComponents: { [key: string]: React.FC } = {\r\n  KeyMetrics: KeyMetricsContent,\r\n  SalesChart: SalesChartContent,\r\n  RecentActivity: RecentActivityContent,\r\n  ToDoList: ToDoListContent,\r\n};\r\n\r\n\r\nexport const DashboardLayout: React.FC = () => {\r\n  const [panels, setPanels] = useState<Panel[]>(() => {\r\n    const saved = localStorage.getItem(STORAGE_KEY);\r\n    return saved ? JSON.parse(saved) : initialPanels;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(panels));\r\n  }, [panels]);\r\n\r\n  const resizingPanelId = useRef<string | null>(null);\r\n  const startX = useRef(0);\r\n  const startColEnd = useRef(0);\r\n\r\n  const onMouseDownResize = (e: React.MouseEvent, panelId: string) => {\r\n    e.preventDefault();\r\n    resizingPanelId.current = panelId;\r\n    startX.current = e.clientX;\r\n    const panel = panels.find(p => p.id === panelId);\r\n    startColEnd.current = panel ? panel.colEnd : 0;\r\n    window.addEventListener('mouseup', onMouseUp);\r\n    window.addEventListener('mousemove', onMouseMove);\r\n  };\r\n\r\n  const onMouseMove = (e: MouseEvent) => {\r\n    if (!resizingPanelId.current) return;\r\n    const deltaX = e.clientX - startX.current;\r\n    const gridColumnWidth = 100;\r\n\r\n    let deltaCols = Math.round(deltaX / gridColumnWidth);\r\n    if (deltaCols === 0) return;\r\n\r\n    setPanels(prev =>\r\n      prev.map(panel => {\r\n        if (panel.id !== resizingPanelId.current) return panel;\r\n        let newColEnd = startColEnd.current + deltaCols;\r\n        if (newColEnd <= panel.colStart) newColEnd = panel.colStart + 1;\r\n        if (newColEnd > 6) newColEnd = 6;\r\n        return { ...panel, colEnd: newColEnd };\r\n      })\r\n    );\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    resizingPanelId.current = null;\r\n    window.removeEventListener('mouseup', onMouseUp);\r\n    window.removeEventListener('mousemove', onMouseMove);\r\n  };\r\n\r\n  const toggleCollapse = (panelId: string) => {\r\n    setPanels(prev =>\r\n      prev.map(panel =>\r\n        panel.id === panelId ? { ...panel, collapsed: !panel.collapsed } : panel\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-grid\">\r\n      {panels.map(panel => {\r\n        const ContentComponent = PanelContentComponents[panel.contentType];\r\n        return (\r\n          <div\r\n            key={panel.id}\r\n            className={`dashboard-panel ${panel.collapsed ? 'collapsed' : ''}`}\r\n            style={{\r\n              gridColumnStart: panel.colStart,\r\n              gridColumnEnd: panel.colEnd,\r\n              gridRowStart: panel.rowStart,\r\n              gridRowEnd: panel.rowEnd,\r\n            }}\r\n          >\r\n            <div className=\"panel-header\">\r\n              <span>{panel.title}</span>\r\n              <button onClick={() => toggleCollapse(panel.id)}>\r\n                {panel.collapsed ? 'Expand' : 'Collapse'}\r\n              </button>\r\n            </div>\r\n            {!panel.collapsed && (\r\n              <div className=\"panel-content\">\r\n                {ContentComponent ? <ContentComponent /> : <div>Content Not Found</div>}\r\n              </div>\r\n            )}\r\n            <div\r\n              className=\"resize-handle\"\r\n              onMouseDown={e => onMouseDownResize(e, panel.id)}\r\n              title=\"Drag to resize horizontally\"\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };"],"names":["STORAGE_KEY","initialPanels","id","title","contentType","colStart","colEnd","rowStart","rowEnd","collapsed","PanelContentComponents","KeyMetrics","React","SalesChart","RecentActivity","ToDoList","DashboardLayout","_useState","useState","saved","localStorage","getItem","JSON","parse","_useState2","_slicedToArray","panels","setPanels","useEffect","setItem","stringify","resizingPanelId","useRef","startX","startColEnd","onMouseMove","e","current","deltaX","clientX","deltaCols","Math","round","prev","map","panel","newColEnd","_objectSpread","onMouseUp","window","removeEventListener","className","ContentComponent","key","concat","style","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","onClick","panelId","onMouseDown","preventDefault","find","p","addEventListener","onMouseDownResize","_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable"],"sourceRoot":""}