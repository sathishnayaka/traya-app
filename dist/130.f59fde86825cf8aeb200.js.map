{"version":3,"file":"130.f59fde86825cf8aeb200.js","mappings":"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","sources":["webpack://traya-app/./src/components/DataGrid/style.css?e48e","webpack://traya-app/./src/components/DataGrid/DataGrid.tsx","webpack://traya-app/./src/hooks/useVirtualScroll.ts","webpack://traya-app/./src/utils/csvExport.ts","webpack://traya-app/./src/pages/DataGrid.tsx","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://traya-app/./src/components/DataGrid/style.css?89a2"],"sourcesContent":["\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useCallback,\r\n  UIEvent,\r\n} from \"react\";\r\nimport { Column, Filter } from \"./types\";\r\nimport { useVirtualScroll } from \"../../hooks/useVirtualScroll\";\r\nimport { exportToCSV } from \"../../utils/csvExport\";\r\nimport './style.css';\r\ninterface DataGridProps<T extends object> {\r\n  columns: Column<T>[];\r\n  data: T[];\r\n  rowHeight?: number;\r\n  height?: number;\r\n}\r\n\r\nexport function DataGrid<T extends object>({\r\n  columns,\r\n  data,\r\n  rowHeight = 35,\r\n  height = 400,\r\n}: DataGridProps<T>) {\r\n  const frozenColumns = useMemo(() => columns.filter((c) => c.frozen), [columns]);\r\n  const scrollableColumns = useMemo(() => columns.filter((c) => !c.frozen), [columns]);\r\n\r\n  const [filters, setFilters] = useState<Filter[]>([]);\r\n\r\n  const filteredData = useMemo(() => {\r\n    if (!filters.length) return data;\r\n    return data.filter((row) =>\r\n      filters.every((f) => {\r\n        const val = String(row[f.key as keyof T] ?? \"\").toLowerCase();\r\n        return val.includes(f.value.toLowerCase());\r\n      })\r\n    );\r\n  }, [data, filters]);\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const { startIndex, endIndex, onScroll } = useVirtualScroll({\r\n    rowHeight,\r\n    totalCount: filteredData.length,\r\n    containerHeight: height,\r\n  });\r\n\r\n  const frozenBodyRef = useRef<HTMLTableSectionElement>(null);\r\n  const scrollableBodyRef = useRef<HTMLTableSectionElement>(null);\r\n\r\n  const handleScroll = useCallback(\r\n    (e: UIEvent<HTMLDivElement>) => {\r\n      const scrollTop = e.currentTarget.scrollTop;\r\n      if (frozenBodyRef.current) {\r\n        frozenBodyRef.current.parentElement!.scrollTop = scrollTop;\r\n      }\r\n      onScroll(e);\r\n    },\r\n    [onScroll]\r\n  );\r\n\r\n  const visibleRows = useMemo(() => {\r\n    return filteredData.slice(startIndex, endIndex + 1);\r\n  }, [filteredData, startIndex, endIndex]);\r\n\r\n  const onExportCSV = () => exportToCSV(filteredData, columns);\r\n\r\n  const getColWidth = (col: Column<T>) =>\r\n    typeof col.width === \"number\" ? `${col.width}px` : \"150px\";\r\n\r\n  const spacerHeightTop = startIndex * rowHeight;\r\n  const spacerHeightBottom = (filteredData.length - endIndex - 1) * rowHeight;\r\n\r\n  return (\r\n    <div style={{ fontFamily: \"sans-serif\", overflow: \"hidden\", border: \"1px solid #ccc\" }} className=\"datagrid-container\">\r\n      <div style={{ padding: 8 }} className=\"datagrid-header\">\r\n        <button onClick={onExportCSV} className=\"btn-export\">Export CSV</button>\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: 12, padding: 8 }}>\r\n        {columns\r\n          .filter((col) => col.filterable)\r\n          .map((col) => {\r\n            const existing = filters.find((f) => f.key === col.key);\r\n            return (\r\n              <div key={String(col.key)}>\r\n                <label style={{ display: \"block\", fontSize: 14 }}>{col.title}</label>\r\n                <input\r\n                  style={{\r\n                    padding: \"4px 8px\",\r\n                    width: 120,\r\n                    fontSize: 14,\r\n                    borderRadius:'12px',\r\n                  }}\r\n                  value={existing?.value || \"\"}\r\n                  onChange={(e) => {\r\n                    const val = e.target.value;\r\n                    setFilters((prev) => {\r\n                      const updated = prev.filter((f) => f.key !== col.key);\r\n                      if (!val.trim()) return updated;\r\n                      return [...updated, { key: String(col.key), value: val }];\r\n                    });\r\n                  }}\r\n                  placeholder={`Filter ${col.title}`}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", height, borderTop: \"1px solid #ccc\" }} ref={containerRef}>\r\n        <div style={{ overflow: \"hidden\", flex: \"0 0 auto\" }}>\r\n          <table\r\n            style={{\r\n              borderCollapse: \"collapse\",\r\n              tableLayout: \"fixed\",\r\n              width: frozenColumns.reduce((sum, col) => sum + (col.width || 150), 0),\r\n            }}\r\n          >\r\n            <thead style={{ background: \"#f5f5f5\" }}>\r\n              <tr>\r\n                {frozenColumns.map((col) => (\r\n                  <th\r\n                    key={String(col.key)}\r\n                    style={{\r\n                      borderBottom: \"1px solid #ccc\",\r\n                      textAlign: \"left\",\r\n                      padding: 8,\r\n                      width: getColWidth(col),\r\n                    }}\r\n                  >\r\n                    {col.title}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody ref={frozenBodyRef} style={{ display: \"block\", height: height - 40, overflow: \"hidden\" }}>\r\n              <tr style={{ height: spacerHeightTop }} />\r\n              {visibleRows.map((row, i) => (\r\n                <tr key={startIndex + i} style={{ height: rowHeight }}>\r\n                  {frozenColumns.map((col) => {\r\n                    const key = col.key as keyof T;\r\n                    const value = row[key];\r\n                    return (\r\n                      <td\r\n                        key={String(col.key)}\r\n                        style={{\r\n                          padding: \"6px 8px\",\r\n                          overflow: \"hidden\",\r\n                          whiteSpace: \"nowrap\",\r\n                          textOverflow: \"ellipsis\",\r\n                          borderBottom: \"1px solid #eee\",\r\n                          width: getColWidth(col),\r\n                        }}\r\n                        title={String(value)}\r\n                      >\r\n                        {col.render ? col.render(value, row) : (value as React.ReactNode)}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              ))}\r\n              <tr style={{ height: spacerHeightBottom }} />\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Scrollable table */}\r\n        <div style={{ overflow: \"auto\", flex: 1 }} onScroll={handleScroll}>\r\n          <table\r\n            style={{\r\n              borderCollapse: \"collapse\",\r\n              tableLayout: \"fixed\",\r\n              width: scrollableColumns.reduce((sum, col) => sum + (col.width || 150), 0),\r\n            }}\r\n          >\r\n            <thead style={{ background: \"#f5f5f5\", position: \"sticky\", top: 0, zIndex: 1 }}>\r\n              <tr>\r\n                {scrollableColumns.map((col) => (\r\n                  <th\r\n                    key={String(col.key)}\r\n                    style={{\r\n                      borderBottom: \"1px solid #ccc\",\r\n                      textAlign: \"left\",\r\n                      padding: 8,\r\n                      width: getColWidth(col),\r\n                    }}\r\n                  >\r\n                    {col.title}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody ref={scrollableBodyRef}>\r\n              <tr style={{ height: spacerHeightTop }} />\r\n              {visibleRows.map((row, i) => (\r\n                <tr key={startIndex + i} style={{ height: rowHeight }}>\r\n                  {scrollableColumns.map((col) => {\r\n                    const key = col.key as keyof T;\r\n                    const value = row[key];\r\n                    return (\r\n                      <td\r\n                        key={String(col.key)}\r\n                        style={{\r\n                          padding: \"6px 8px\",\r\n                          overflow: \"hidden\",\r\n                          whiteSpace: \"nowrap\",\r\n                          textOverflow: \"ellipsis\",\r\n                          borderBottom: \"1px solid #eee\",\r\n                          width: getColWidth(col),\r\n                        }}\r\n                        title={String(value)}\r\n                      >\r\n                        {col.render ? col.render(value, row) : (value as React.ReactNode)}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              ))}\r\n              <tr style={{ height: spacerHeightBottom }} />\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useState, useEffect, useRef, useCallback } from \"react\";\r\n\r\ninterface VirtualScrollParams {\r\n  rowHeight: number;\r\n  totalCount: number;\r\n  containerHeight: number;\r\n}\r\n\r\nexport function useVirtualScroll({\r\n  rowHeight,\r\n  totalCount,\r\n  containerHeight,\r\n}: VirtualScrollParams) {\r\n  const [startIndex, setStartIndex] = useState(0);\r\n  const [endIndex, setEndIndex] = useState(0);\r\n\r\n  const visibleCount = Math.ceil(containerHeight / rowHeight);\r\n\r\n  const onScroll = useCallback((e: React.UIEvent<HTMLDivElement>) => {\r\n    const scrollTop = e.currentTarget.scrollTop;\r\n    const start = Math.floor(scrollTop / rowHeight);\r\n    setStartIndex(start);\r\n    setEndIndex(Math.min(totalCount - 1, start + visibleCount));\r\n  }, [rowHeight, totalCount, visibleCount]);\r\n\r\n  useEffect(() => {\r\n    setEndIndex(Math.min(totalCount - 1, visibleCount));\r\n  }, [totalCount, visibleCount]);\r\n\r\n  return { startIndex, endIndex, onScroll, visibleCount };\r\n}","export function exportToCSV<T>(data: T[], columns: { key: keyof T; title: string }[], filename = 'export.csv') {\r\n  const header = columns.map(c => `\"${c.title}\"`).join(\",\");\r\n  const rows = data.map(row =>\r\n    columns.map(c => {\r\n      const val = row[c.key];\r\n      if (typeof val === 'string') return `\"${val.replace(/\"/g, '\"\"')}\"`;\r\n      return val;\r\n    }).join(\",\")\r\n  );\r\n\r\n  const csvContent = [header, ...rows].join(\"\\r\\n\");\r\n  const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n\r\n  const link = document.createElement(\"a\");\r\n  const url = URL.createObjectURL(blob);\r\n  link.setAttribute(\"href\", url);\r\n  link.setAttribute(\"download\", filename);\r\n  link.style.visibility = \"hidden\";\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","import React from \"react\";\r\nimport { DataGrid } from \"../components/DataGrid/DataGrid\";\r\nimport { Column } from \"../components/DataGrid/types\";\r\n\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  age: number;\r\n  status: \"Active\" | \"Inactive\";\r\n  joinDate: string;\r\n}\r\n\r\nconst data: User[] = Array.from({ length: 1000 }, (_, i) => ({\r\n  id: i + 1,\r\n  name: `User ${i + 1}`,\r\n  email: `user${i + 1}@example.com`,\r\n  age: 20 + (i % 50),\r\n  status: Math.random() > 0.5 ? \"Active\" : \"Inactive\",\r\n  joinDate: new Date(Date.now() - i * 86400000).toISOString(), // last X days\r\n}));\r\n\r\nconst columns: Column<User>[] = [\r\n  { key: \"id\", title: \"ID\", width: 80 },\r\n  { key: \"name\", title: \"Name\", filterable: true, width: 150 },\r\n  { key: \"email\", title: \"Email\", filterable: true, width: 250 },\r\n  { key: \"age\", title: \"Age\", width: 100 },\r\n\r\n  // 🟢 Status Badge\r\n  {\r\n    key: \"status\",\r\n    title: \"Status\",\r\n    width: 120,\r\n    render: (value) => (\r\n      <span\r\n        style={{\r\n          padding: \"2px 8px\",\r\n          borderRadius: \"9999px\",\r\n          backgroundColor: value === \"Active\" ? \"#d4fcd4\" : \"#fde2e2\",\r\n          color: value === \"Active\" ? \"#007f00\" : \"#cc0000\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"0.85em\",\r\n        }}\r\n      >\r\n        {value}\r\n      </span>\r\n    ),\r\n  },\r\n\r\n  // 🔗 Profile Link\r\n  {\r\n    key: \"email\",\r\n    title: \"Profile\",\r\n    width: 180,\r\n    render: (value, row) => (\r\n      <a\r\n        href={`https://example.com/users/${row.id}`}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        style={{ color: \"#007bff\", textDecoration: \"underline\" }}\r\n      >\r\n        View Profile\r\n      </a>\r\n    ),\r\n  },\r\n\r\n  // 📅 Join Date\r\n  {\r\n    key: \"joinDate\",\r\n    title: \"Join Date\",\r\n    width: 160,\r\n    render: (value) => {\r\n      const date = new Date(value);\r\n      return date.toLocaleDateString();\r\n    },\r\n  },\r\n];\r\n\r\nfunction DataGridPage() {\r\n  return (\r\n    <div style={{ padding: 16 }}>\r\n      <h2>Virtualized DataGrid with Custom Rendered Columns</h2>\r\n      <DataGrid<User> columns={columns} data={data} rowHeight={35} height={500} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataGridPage;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nexport { _toConsumableArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nexport { _arrayWithoutHoles as default };","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nexport { _iterableToArray as default };","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableSpread as default };","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `// extracted by mini-css-extract-plugin\nexport {};`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/DataGrid/style.css\"],\"names\":[],\"mappings\":\"AAAA;QACS,CAAA\",\"sourcesContent\":[\"// extracted by mini-css-extract-plugin\\nexport {};\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","DataGrid","_ref","columns","data","_ref$rowHeight","rowHeight","_ref$height","height","frozenColumns","useMemo","filter","c","frozen","scrollableColumns","_useState","useState","_useState2","_slicedToArray","filters","setFilters","filteredData","length","row","every","f","_row","String","key","toLowerCase","includes","value","containerRef","useRef","_useVirtualScroll","totalCount","containerHeight","startIndex","setStartIndex","_useState3","_useState4","endIndex","setEndIndex","visibleCount","Math","ceil","onScroll","useCallback","e","scrollTop","currentTarget","start","floor","min","useEffect","useVirtualScroll","frozenBodyRef","scrollableBodyRef","handleScroll","current","parentElement","visibleRows","slice","getColWidth","col","width","concat","spacerHeightTop","spacerHeightBottom","React","style","fontFamily","overflow","border","className","padding","onClick","filename","arguments","undefined","header","map","title","join","rows","val","replace","csvContent","_toConsumableArray","blob","Blob","type","link","document","createElement","url","URL","createObjectURL","setAttribute","visibility","body","appendChild","click","removeChild","exportToCSV","display","flexWrap","gap","filterable","existing","find","fontSize","borderRadius","onChange","target","prev","updated","trim","placeholder","borderTop","ref","flex","borderCollapse","tableLayout","reduce","sum","background","borderBottom","textAlign","i","whiteSpace","textOverflow","render","position","top","zIndex","Array","from","_","id","name","email","age","status","random","joinDate","Date","now","toISOString","backgroundColor","color","fontWeight","href","rel","textDecoration","toLocaleDateString","r","isArray","arrayLikeToArray","Symbol","iterator","unsupportedIterableToArray","TypeError","___CSS_LOADER_EXPORT___","push","module"],"sourceRoot":""}