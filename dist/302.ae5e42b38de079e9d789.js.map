{"version":3,"file":"302.ae5e42b38de079e9d789.js","mappings":"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","sources":["webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://traya-app/./node_modules/react/jsx-runtime.js","webpack://traya-app/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://traya-app/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/noop.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/global-config.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/frameloop/order.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/stats/buffer.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/frameloop/batcher.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/frameloop/render-step.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/frameloop/frame.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/array.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/subscription-manager.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/velocity-per-second.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/index.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/pipe.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/clamp.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/stats/animation-count.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/color/utils.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/color/hex.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/color/index.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/complex/index.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/mix/number.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/mix/color.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/mix/complex.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/mix/index.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/easing/ease.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/easing/back.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/easing/anticipate.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/easing/circ.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/easing/utils/map.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/progress.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/interpolate.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/memo.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/render/dom/style-set.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/frameloop/microtask.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/int.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/maps/number.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/auto.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/test.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/dimensions.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/is-numerical-string.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/is-zero-value-string.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/value/types/utils/find.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://traya-app/./node_modules/motion-dom/dist/es/utils/is-html-element.mjs","webpack://traya-app/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://traya-app/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://traya-app/./node_modules/motion-utils/dist/es/is-object.mjs","webpack://traya-app/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://traya-app/./node_modules/react/cjs/react-jsx-runtime.production.js"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nexport { _toConsumableArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nexport { _arrayWithoutHoles as default };","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nexport { _iterableToArray as default };","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableSpread as default };","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = (sync = true) => {\n            if (sync) {\n                const { motionValue } = this.options;\n                if (motionValue && motionValue.updatedAt !== time.now()) {\n                    this.tick(time.now());\n                }\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop(false);\n            this.resumingFrom?.currentAnimation?.stop(false);\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop(false);\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop(false));\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (document.head.contains(style)) {\n                document.head.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","module","exports","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","_toConsumableArray","Array","isArray","arrayLikeToArray","from","unsupportedIterableToArray","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","getValueTransition","transition","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","Math","max","min","length","cancelFrame","frameSteps","requestAnimationFrame","transformPropOrder","transformProps","positionalKeys","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","init","options","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","addDependent","removeDependent","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isKeyframesTarget","setMotionValue","hasValue","getValue","addValue","isMotionValue","Boolean","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","combineFunctions","pipe","transformers","clamp","seconds","millisecondsToSeconds","milliseconds","activeAnimations","layout","mainThread","waapi","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","split","trim","number","parse","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","isNullish","hasOwnProperty","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","map","hueToRgb","q","mixImmediate","mixNumber","to","progress","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","visualDuration","keyframes","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","createGenerator","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","holdTime","playbackSpeed","sync","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","window","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","commitStyles","effect","getComputedTiming","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","assign","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","resolved","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","LayoutGroupContext","L","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","isSVGElement","compareByDepth","depth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","for","useMotionRef","visualState","externalRef","useCallback","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","perspective","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","charAt","svgMotionConfig","createMotionComponentFactory","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion","isHTMLElement","_extends","bind","n","apply","isBrowser","useConstant","PopChildMeasure","childRef","offsetParent","parentWidth","offsetWidth","sizeRef","offsetHeight","offsetTop","offsetLeft","PopChild","anchorX","useId","nonce","dataset","motionPopId","head","appendChild","sheet","insertRule","contains","removeChild","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","isReusedContext","childId","isComplete","_","getChildKey","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","setRenderedChildren","exitingChildren","nextChildren","forceRender","isEveryExitComplete","isExitComplete","usePresence","isObject","REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","jsxProd","maybeKey","propName","$$typeof"],"sourceRoot":""}